#!/usr/bin/php -q
<?php
# Text art
#
# Converts images to html or terminal text
#
# By James Reynolds
# www.magnusviri.com
#
# Usage: text_art [-h] [-w <width>] (<file>|raw_colors|color_wheel|color_gradients) [(<file>|etc)..]
#
#     -h print html page instead of terminal escape sequences (terminal is default).
#     -w width in characters (height is based on width).
#     <file> the image file to display.
#     raw_colors - (see https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit)
#     color_wheel - shows a color wheel
#     color_gradients - shows nice gradients
#
# I drew inspiration from these websites.
#
# https://gist.github.com/donatj/1353237
# http://paulbourke.net/dataformats/asciiart/
# https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit

$ascii_width = 80;
$html = false;
$greyscale = false;
$font_y_scale = .5; # this is the font width vs height

array_shift($argv);

if( !isset($argv[0]) || !strlen($argv[0]) ) {
	usage("Please Specify a File\n");
} else {
	$text = "";
	foreach ( $argv as $arg ) {
		if ( $arg == "-h" ) {
			$html = true;
		} elseif ( $arg == "-w" ) {
			$ascii_width = -1;
		} elseif ( $ascii_width == -1 ) {
			$ascii_width = $arg;
		} elseif ( $arg == "-r" ) {
			$font_y_scale = -1;
		} elseif ( $font_y_scale == -1 ) {
			$font_y_scale = $arg;
		} elseif ( $arg == "-g" ) {
			$greyscale = true;
		} elseif ( $arg == "raw_colors" ) {
			$text .= raw_colors();
		} elseif ( $arg == "color_wheel" ) {
			$text .= color_wheel($ascii_width);
		} elseif ( $arg == "color_gradients" ) {
			$text .= color_gradients();
		} elseif ( file_exists($arg) ) {
			$text .= image_text($arg, $ascii_width);
		} else {
			usage("Please Specify a file.\n");
		}
	}
	if ( $html ) {
		print html_1();
		print $text;
		print html_2();
	} else {
		print $text;
	}
}

##########################################################################################

function usage($message="") {
	print "Usage: text_art [-h] [-r <ratio>] [-w <width>] (<file>|raw_colors|color_wheel|color_gradients) [(<file>|etc)..]\n";
	print "\n";
	print "     -h print html page instead of terminal escape sequences (terminal is default).\n";
	print "     -r width to height ratio (default is .5).\n";
	print "     -w width in characters (height is based on width * ratio).\n";
	print "     <file> the image file to display.\n";
	print "     raw_colors - (see https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit)\n";
	print "     color_wheel - shows a color wheel\n";
	print "     color_gradients - shows nice gradients\n";
	print $message;
	exit(1);
}

function image_text($file, $ascii_width) {
	global $font_y_scale;
	$img = imagecreatefromstring(file_get_contents($file));
	list($img_width, $img_height) = getimagesize($file);
	$ascii_height = $ascii_width*$img_height/$img_width*$font_y_scale;
	$x_scale = $img_width/$ascii_width;
	$y_scale = $img_height/$ascii_height;
// 	print "$img_width, $img_height $ascii_width,$ascii_height $x_scale,$y_scale \n";
	$debug = 0;
	$image_text = "";
	for($yy = 0; $yy < $ascii_height; $yy++) {
		for($xx = 0; $xx < $ascii_width; $xx++) {
			$img_xx = $xx*$x_scale;
			$img_yy = $yy*$y_scale;
			list($rr,$gg,$bb,$alpha) = get_average_value($img, $img_xx, $img_xx+$x_scale, $img_yy, $img_yy+$y_scale);
			list($fg, $bg, $char) = what_to_print( $rr, $gg, $bb );
			$image_text .= enc_char($fg, $bg, $char);
			if ( $debug ) {
				print enc_lf();
			}
		}
		$image_text .= enc_lf();#"\033[0m\n";
	}
	$image_text = rtrim($image_text);
	$image_text .= PHP_EOL;
	return $image_text;
}

##########################################################################################

function get_average_value($img, $x1, $x2, $y1, $y2) {
	$rr = 0;
	$gg = 0;
	$bb = 0;
	$alpha = 0;
	$count = 0;
	for($yy = $y1; $yy < $y2; $yy++) {
		for($xx = $x1; $xx < $x2; $xx++) {
			list($r,$g,$b,$alpha) = pixel_color($img, $xx, $yy);
			$rr += $r;
			$gg += $g;
			$bb += $b;
			$count++;
		}
	}
	return array($rr/$count, $gg/$count, $bb/$count, $alpha);
}

function pixel_color($img, $xx, $yy) {
	$rgb = imagecolorat($img, $xx, $yy);
	$r = (($rgb >> 16) & 255);
	$g = (($rgb >> 8) & 255);
	$b = ($rgb & 255);
	$alpha = ($rgba & 0x7F000000) >> 24;
// 	var_dump($r, $g, $b, $alpha);
// 	print "$rgb $r $g $b, $alpha";
	return array($r/255, $g/255, $b/255, $alpha);
}

##########################################################################################

function enc_char($fg, $bg, $char) {
	global $html;
	if ( $html ) {
		if ( $char == " " ) {
			$char = "&nbsp;";
		}
		return "</span><span class=\"bk${bg} txt${fg}\">$char";
	} else {
		return "\033[38;5;${fg}m\033[48;5;${bg}m$char";
	}
}

function enc_lf() {
	global $html;
	if ( $html ) {
		return "<br/>";
	} else {
		return "\033[48;5;0m\n";
	}
}

function ascii_color( $red, $green, $blue ) {
	global $greyscale;
	if ( $greyscale or ( abs($red-$green) < .005 and abs($green-$blue) < .005 ) ) {
		$shade = (int) (25*($green+$red+$blue)/3 + 231);
		if ( $shade < 232 ) { $shade = 0; }
		if ( $shade > 255 ) { $shade = 231; }
		return $shade;
	} else {
		return (int) (16 + (round($red * 5) * 36) + (round($green * 5) * 6) + round($blue * 5));
	}
}

function what_to_print( $red, $green, $blue ) {
	$use_char = 1;
	if ( $use_char ) {
		if ( $red < 0 ) { $red = 0; }
		if ( $green < 0 ) { $green = 0; }
		if ( $blue < 0 ) { $blue = 0; }
		for ( $ii = 0; $ii < 1; $ii++ ) {
			if ( $red > 1 ) {  $cyan = $red -1; $red = 1; }
			if ( $green > 1 ) { $magenta = $green -1; $green = 1; }
			if ( $blue > 1 ) { $yellow = $blue -1; $blue = 1; }
			$red += $magenta/2 + $yellow/2;
			$green += $cyan/2 + $yellow/2;
			$blue += $magenta/2 + $cyan/2;
		}

		if ( $red > 1 ) { $red = 1; }
		if ( $green > 1 ) { $green = 1; }
		if ( $blue > 1 ) { $blue = 1; }

		$char_magnifier = .7;
		$chars = "@#M08OhkXI)i/!;:-. ";
		$chars = strrev($chars); # comment this out if white on black
		$c_count = strlen($chars);
		$char_index = (int) ( ($red+$green+$blue) * ($c_count-1) * $char_magnifier );
		if ( $char_index < 0 ) { $char_index = 0; }
		if ( $char_index >= $c_count ) { $char_index = $c_count-1; }
		$char = $chars[ $char_index ];
		#$char = "#";

		if ( $red < .5 ) {
			$r1 = $red*2;
			$r2 = 0;
		} else {
			$r1 = 1;
			$r2 = ($red-.5)*2;
		}
		if ( $green < .5 ) {
			$g1 = $green*2;
			$g2 = 0;
		} else {
			$g1 = 1;
			$g2 = ($green-.5)*2;
		}
		if ( $blue < .5 ) {
			$b1 = $blue*2;
			$b2 = 0;
		} else {
			$b1 = 1;
			$b2 = ($blue-.5)*2;
		}
	} else {
		if ( $red < 0 ) { $red = 0; }
		if ( $green < 0 ) { $green = 0; }
		if ( $blue < 0 ) { $blue = 0; }

		if ( $red > 1 ) { $red = 1; }
		if ( $green > 1 ) { $green = 1; }
		if ( $blue > 1 ) { $blue = 1; }

		$char = " ";
		$r1 = $red;
		$r2 = $red;
		$g1 = $green;
		$g2 = $green;
		$b1 = $blue;
		$b2 = $blue;
	}
	$fg = ascii_color( $r1, $g1, $b1 );
	$bg = ascii_color( $r2, $g2, $b2 );
	return array($fg, $bg, $char);
}

##########################################################################################

function color_gradients() {
	$image_text = "Black to red\n";
	$count = 19;
	for ($color = 0; $color <= $count; $color++ ) {
		list($fg, $bg, $char) = what_to_print( $color/$count, 0, 0 );
		$image_text .= enc_char($fg, $bg, "$char$char$char$char$char");
		$image_text .= enc_char(15, 0, " $fg $bg ");
		$image_text .= enc_lf();
	}
	$image_text .= "Red to white\n";
	$count = 19;
	for ($color = 0; $color <= $count; $color++ ) {
		list($fg, $bg, $char) = what_to_print( 1, $color/$count, $color/$count );
		$image_text .= enc_char($fg, $bg, "$char$char$char$char$char");
		$image_text .= enc_char(15, 0, " $fg $bg ");
		$image_text .= enc_lf();
	}
	$image_text .= "Black to yellow\n";
	$count = 19;
	for ($color = 0; $color <= $count; $color++ ) {
		list($fg, $bg, $char) = what_to_print( $color/$count, $color/$count, 0 );
		$image_text .= enc_char($fg, $bg, "$char$char$char$char$char");
		$image_text .= enc_char(15, 0, " $fg $bg ");
		$image_text .= enc_lf();
	}
	$image_text .= "Yellow to blue\n";
	$count = 19;
	for ($color = 0; $color <= $count; $color++ ) {
		list($fg, $bg, $char) = what_to_print( 1-$color/$count, 1-$color/$count, $color/$count );
		$image_text .= enc_char($fg, $bg, "$char$char$char$char$char");
		$image_text .= enc_char(15, 0, " $fg $bg ");
		$image_text .= enc_lf();
	}
	$image_text .= "Black to white\n";
	$count = 79;
	for ($grey = 0; $grey <= $count; $grey++ ) {
		list($fg, $bg, $char) = what_to_print( $grey/$count, $grey/$count, $grey/$count );
		$image_text .= enc_char($fg, $bg, "$char$char$char$char$char");
		$image_text .= enc_char(9, 0, "   $fg   $bg ");
		$image_text .= enc_lf();
	}
	return $image_text;
}

function raw_colors() {
	$image_text = "";
	for ($color = 0; $color < 16; $color++) {
		$image_text .= "\033[48;5;${color}m ";
	}
	$image_text .= enc_lf();
	for ($color = 16; $color < 232; $color++) {
		$image_text .= "\033[48;5;${color}m ";
		if ( $color % 36 == 15 ) {
			$image_text .= enc_lf();
		}
	}
	$image_text .= enc_lf();
	for ($color = 232; $color < 256; $color++) {
		$image_text .= "\033[48;5;${color}m ";
	}
	$image_text .= enc_lf();
	for ($color = 232; $color < 256; $color++) {
		$image_text .= "\033[48;5;${color}m${color} ";
	}
	$image_text .= enc_lf();

	$image_text .= "\033[0m ";
	return $image_text;
}

function color_wheel($ascii_width) {
	$image_text = "";
	$width = $ascii_width;
	$height = $ascii_width;
	for ($yy = 0; $yy < $height; $yy++) {
		for ($xx = 0; $xx < $width; $xx++) {
			list($red, $green, $blue) = color_wheel_point($xx, $yy, $width/2);
			list($fg, $bg, $char) = what_to_print( $red, $green, $blue );
			$image_text .=  enc_char($fg, $bg, $char);
		}
		$image_text .=  enc_lf();
	}
	return $image_text;
}

function color_wheel_point($xx, $yy, $radius) {
	$xx2 = $xx - $radius;
	$yy2 = $radius - $yy;
	$magnitude = sqrt($xx2*$xx2 + $yy2*$yy2);
	if ( $yy2 != 0 ) {
		$angle = rad2deg(atan($xx2/$yy2));
	} else {
		if ( $xx2 < 0 ) {
			$angle = 270;
		} else
			$angle = 90;
		}
	if ( $yy2 < 0 ) {
		$angle += 180;
	}
	if ( $angle < 0 ) {
		$angle += 360;
	}
	if ( $angle < 120 ) {
		$red = (120-$angle)/120;
		$green = $angle/120;
		$blue = 0;
	} elseif ( $angle < 240 ) {
		$red = 0;
		$green = (240-$angle)/120;
		$blue = ($angle-120)/120;
	} else {
		$red = ($angle-240)/120;
		$green = 0;
		$blue = (360-$angle)/120;
	}
	$multiplier = (2*$magnitude/$radius);
	if ( $multiplier != 0 ) {
		$red = $red     / $multiplier;
		$green = $green / $multiplier;
		$blue = $blue   / $multiplier;
	} else {
		$red = 1;
		$green = 1;
		$blue = 1;
	}
	if ( $magnitude > $radius ) {
		$red = 0;
		$green = 0;
		$blue = 0;
	}
	return array($red, $green, $blue);
}

function html_1() {
	return '<!DOCTYPE html>
<html><head><style>.bk0{background:#000000;}.bk1{background:#800000;}.bk2{background:#008000;}.bk3{background:#808000;}.bk4{background:#000080;}.bk5{background:#800080;}.bk6{background:#008080;}.bk7{background:#c0c0c0;}.bk8{background:#808080;}.bk9{background:#ff0000;}.bk10{background:#00ff00;}.bk11{background:#ffff00;}.bk12{background:#0000ff;}.bk13{background:#ff00ff;}.bk14{background:#00ffff;}.bk15{background:#ffffff;}.bk16{background:#000000;}.bk17{background:#00005f;}.bk18{background:#000087;}.bk19{background:#0000af;}.bk20{background:#0000d7;}.bk21{background:#0000ff;}.bk22{background:#005f00;}.bk23{background:#005f5f;}.bk24{background:#005f87;}.bk25{background:#005faf;}.bk26{background:#005fd7;}.bk27{background:#005fff;}.bk28{background:#008700;}.bk29{background:#00875f;}.bk30{background:#008787;}.bk31{background:#0087af;}.bk32{background:#0087d7;}.bk33{background:#0087ff;}.bk34{background:#00af00;}.bk35{background:#00af5f;}.bk36{background:#00af87;}.bk37{background:#00afaf;}.bk38{background:#00afd7;}.bk39{background:#00afff;}.bk40{background:#00d700;}.bk41{background:#00d75f;}.bk42{background:#00d787;}.bk43{background:#00d7af;}.bk44{background:#00d7d7;}.bk45{background:#00d7ff;}.bk46{background:#00ff00;}.bk47{background:#00ff5f;}.bk48{background:#00ff87;}.bk49{background:#00ffaf;}.bk50{background:#00ffd7;}.bk51{background:#00ffff;}.bk52{background:#5f0000;}.bk53{background:#5f005f;}.bk54{background:#5f0087;}.bk55{background:#5f00af;}.bk56{background:#5f00d7;}.bk57{background:#5f00ff;}.bk58{background:#5f5f00;}.bk59{background:#5f5f5f;}.bk60{background:#5f5f87;}.bk61{background:#5f5faf;}.bk62{background:#5f5fd7;}.bk63{background:#5f5fff;}.bk64{background:#5f8700;}.bk65{background:#5f875f;}.bk66{background:#5f8787;}.bk67{background:#5f87af;}.bk68{background:#5f87d7;}.bk69{background:#5f87ff;}.bk70{background:#5faf00;}.bk71{background:#5faf5f;}.bk72{background:#5faf87;}.bk73{background:#5fafaf;}.bk74{background:#5fafd7;}.bk75{background:#5fafff;}.bk76{background:#5fd700;}.bk77{background:#5fd75f;}.bk78{background:#5fd787;}.bk79{background:#5fd7af;}.bk80{background:#5fd7d7;}.bk81{background:#5fd7ff;}.bk82{background:#5fff00;}.bk83{background:#5fff5f;}.bk84{background:#5fff87;}.bk85{background:#5fffaf;}.bk86{background:#5fffd7;}.bk87{background:#5fffff;}.bk88{background:#870000;}.bk89{background:#87005f;}.bk90{background:#870087;}.bk91{background:#8700af;}.bk92{background:#8700d7;}.bk93{background:#8700ff;}.bk94{background:#875f00;}.bk95{background:#875f5f;}.bk96{background:#875f87;}.bk97{background:#875faf;}.bk98{background:#875fd7;}.bk99{background:#875fff;}.bk100{background:#878700;}.bk101{background:#87875f;}.bk102{background:#878787;}.bk103{background:#8787af;}.bk104{background:#8787d7;}.bk105{background:#8787ff;}.bk106{background:#87af00;}.bk107{background:#87af5f;}.bk108{background:#87af87;}.bk109{background:#87afaf;}.bk110{background:#87afd7;}.bk111{background:#87afff;}.bk112{background:#87d700;}.bk113{background:#87d75f;}.bk114{background:#87d787;}.bk115{background:#87d7af;}.bk116{background:#87d7d7;}.bk117{background:#87d7ff;}.bk118{background:#87ff00;}.bk119{background:#87ff5f;}.bk120{background:#87ff87;}.bk121{background:#87ffaf;}.bk122{background:#87ffd7;}.bk123{background:#87ffff;}.bk124{background:#af0000;}.bk125{background:#af005f;}.bk126{background:#af0087;}.bk127{background:#af00af;}.bk128{background:#af00d7;}.bk129{background:#af00ff;}.bk130{background:#af5f00;}.bk131{background:#af5f5f;}.bk132{background:#af5f87;}.bk133{background:#af5faf;}.bk134{background:#af5fd7;}.bk135{background:#af5fff;}.bk136{background:#af8700;}.bk137{background:#af875f;}.bk138{background:#af8787;}.bk139{background:#af87af;}.bk140{background:#af87d7;}.bk141{background:#af87ff;}.bk142{background:#afaf00;}.bk143{background:#afaf5f;}.bk144{background:#afaf87;}.bk145{background:#afafaf;}.bk146{background:#afafd7;}.bk147{background:#afafff;}.bk148{background:#afd700;}.bk149{background:#afd75f;}.bk150{background:#afd787;}.bk151{background:#afd7af;}.bk152{background:#afd7d7;}.bk153{background:#afd7ff;}.bk154{background:#afff00;}.bk155{background:#afff5f;}.bk156{background:#afff87;}.bk157{background:#afffaf;}.bk158{background:#afffd7;}.bk159{background:#afffff;}.bk160{background:#d70000;}.bk161{background:#d7005f;}.bk162{background:#d70087;}.bk163{background:#d700af;}.bk164{background:#d700d7;}.bk165{background:#d700ff;}.bk166{background:#d75f00;}.bk167{background:#d75f5f;}.bk168{background:#d75f87;}.bk169{background:#d75faf;}.bk170{background:#d75fd7;}.bk171{background:#d75fff;}.bk172{background:#d78700;}.bk173{background:#d7875f;}.bk174{background:#d78787;}.bk175{background:#d787af;}.bk176{background:#d787d7;}.bk177{background:#d787ff;}.bk178{background:#d7af00;}.bk179{background:#d7af5f;}.bk180{background:#d7af87;}.bk181{background:#d7afaf;}.bk182{background:#d7afd7;}.bk183{background:#d7afff;}.bk184{background:#d7d700;}.bk185{background:#d7d75f;}.bk186{background:#d7d787;}.bk187{background:#d7d7af;}.bk188{background:#d7d7d7;}.bk189{background:#d7d7ff;}.bk190{background:#d7ff00;}.bk191{background:#d7ff5f;}.bk192{background:#d7ff87;}.bk193{background:#d7ffaf;}.bk194{background:#d7ffd7;}.bk195{background:#d7ffff;}.bk196{background:#ff0000;}.bk197{background:#ff005f;}.bk198{background:#ff0087;}.bk199{background:#ff00af;}.bk200{background:#ff00d7;}.bk201{background:#ff00ff;}.bk202{background:#ff5f00;}.bk203{background:#ff5f5f;}.bk204{background:#ff5f87;}.bk205{background:#ff5faf;}.bk206{background:#ff5fd7;}.bk207{background:#ff5fff;}.bk208{background:#ff8700;}.bk209{background:#ff875f;}.bk210{background:#ff8787;}.bk211{background:#ff87af;}.bk212{background:#ff87d7;}.bk213{background:#ff87ff;}.bk214{background:#ffaf00;}.bk215{background:#ffaf5f;}.bk216{background:#ffaf87;}.bk217{background:#ffafaf;}.bk218{background:#ffafd7;}.bk219{background:#ffafff;}.bk220{background:#ffd700;}.bk221{background:#ffd75f;}.bk222{background:#ffd787;}.bk223{background:#ffd7af;}.bk224{background:#ffd7d7;}.bk225{background:#ffd7ff;}.bk226{background:#ffff00;}.bk227{background:#ffff5f;}.bk228{background:#ffff87;}.bk229{background:#ffffaf;}.bk230{background:#ffffd7;}.bk231{background:#ffffff;}.bk232{background:#080808;}.bk233{background:#121212;}.bk234{background:#1c1c1c;}.bk235{background:#262626;}.bk236{background:#303030;}.bk237{background:#3a3a3a;}.bk238{background:#444444;}.bk239{background:#4e4e4e;}.bk240{background:#585858;}.bk241{background:#626262;}.bk242{background:#6c6c6c;}.bk243{background:#767676;}.bk244{background:#808080;}.bk245{background:#8a8a8a;}.bk246{background:#949494;}.bk247{background:#9e9e9e;}.bk248{background:#a8a8a8;}.bk249{background:#b2b2b2;}.bk250{background:#bcbcbc;}.bk251{background:#c6c6c6;}.bk252{background:#d0d0d0;}.bk253{background:#dadada;}.bk254{background:#e4e4e4;}.bk255{background:#eeeeee;}.txt0{color:#000000;}.txt1{color:#800000;}.txt2{color:#008000;}.txt3{color:#808000;}.txt4{color:#000080;}.txt5{color:#800080;}.txt6{color:#008080;}.txt7{color:#c0c0c0;}.txt8{color:#808080;}.txt9{color:#ff0000;}.txt10{color:#00ff00;}.txt11{color:#ffff00;}.txt12{color:#0000ff;}.txt13{color:#ff00ff;}.txt14{color:#00ffff;}.txt15{color:#ffffff;}.txt16{color:#000000;}.txt17{color:#00005f;}.txt18{color:#000087;}.txt19{color:#0000af;}.txt20{color:#0000d7;}.txt21{color:#0000ff;}.txt22{color:#005f00;}.txt23{color:#005f5f;}.txt24{color:#005f87;}.txt25{color:#005faf;}.txt26{color:#005fd7;}.txt27{color:#005fff;}.txt28{color:#008700;}.txt29{color:#00875f;}.txt30{color:#008787;}.txt31{color:#0087af;}.txt32{color:#0087d7;}.txt33{color:#0087ff;}.txt34{color:#00af00;}.txt35{color:#00af5f;}.txt36{color:#00af87;}.txt37{color:#00afaf;}.txt38{color:#00afd7;}.txt39{color:#00afff;}.txt40{color:#00d700;}.txt41{color:#00d75f;}.txt42{color:#00d787;}.txt43{color:#00d7af;}.txt44{color:#00d7d7;}.txt45{color:#00d7ff;}.txt46{color:#00ff00;}.txt47{color:#00ff5f;}.txt48{color:#00ff87;}.txt49{color:#00ffaf;}.txt50{color:#00ffd7;}.txt51{color:#00ffff;}.txt52{color:#5f0000;}.txt53{color:#5f005f;}.txt54{color:#5f0087;}.txt55{color:#5f00af;}.txt56{color:#5f00d7;}.txt57{color:#5f00ff;}.txt58{color:#5f5f00;}.txt59{color:#5f5f5f;}.txt60{color:#5f5f87;}.txt61{color:#5f5faf;}.txt62{color:#5f5fd7;}.txt63{color:#5f5fff;}.txt64{color:#5f8700;}.txt65{color:#5f875f;}.txt66{color:#5f8787;}.txt67{color:#5f87af;}.txt68{color:#5f87d7;}.txt69{color:#5f87ff;}.txt70{color:#5faf00;}.txt71{color:#5faf5f;}.txt72{color:#5faf87;}.txt73{color:#5fafaf;}.txt74{color:#5fafd7;}.txt75{color:#5fafff;}.txt76{color:#5fd700;}.txt77{color:#5fd75f;}.txt78{color:#5fd787;}.txt79{color:#5fd7af;}.txt80{color:#5fd7d7;}.txt81{color:#5fd7ff;}.txt82{color:#5fff00;}.txt83{color:#5fff5f;}.txt84{color:#5fff87;}.txt85{color:#5fffaf;}.txt86{color:#5fffd7;}.txt87{color:#5fffff;}.txt88{color:#870000;}.txt89{color:#87005f;}.txt90{color:#870087;}.txt91{color:#8700af;}.txt92{color:#8700d7;}.txt93{color:#8700ff;}.txt94{color:#875f00;}.txt95{color:#875f5f;}.txt96{color:#875f87;}.txt97{color:#875faf;}.txt98{color:#875fd7;}.txt99{color:#875fff;}.txt100{color:#878700;}.txt101{color:#87875f;}.txt102{color:#878787;}.txt103{color:#8787af;}.txt104{color:#8787d7;}.txt105{color:#8787ff;}.txt106{color:#87af00;}.txt107{color:#87af5f;}.txt108{color:#87af87;}.txt109{color:#87afaf;}.txt110{color:#87afd7;}.txt111{color:#87afff;}.txt112{color:#87d700;}.txt113{color:#87d75f;}.txt114{color:#87d787;}.txt115{color:#87d7af;}.txt116{color:#87d7d7;}.txt117{color:#87d7ff;}.txt118{color:#87ff00;}.txt119{color:#87ff5f;}.txt120{color:#87ff87;}.txt121{color:#87ffaf;}.txt122{color:#87ffd7;}.txt123{color:#87ffff;}.txt124{color:#af0000;}.txt125{color:#af005f;}.txt126{color:#af0087;}.txt127{color:#af00af;}.txt128{color:#af00d7;}.txt129{color:#af00ff;}.txt130{color:#af5f00;}.txt131{color:#af5f5f;}.txt132{color:#af5f87;}.txt133{color:#af5faf;}.txt134{color:#af5fd7;}.txt135{color:#af5fff;}.txt136{color:#af8700;}.txt137{color:#af875f;}.txt138{color:#af8787;}.txt139{color:#af87af;}.txt140{color:#af87d7;}.txt141{color:#af87ff;}.txt142{color:#afaf00;}.txt143{color:#afaf5f;}.txt144{color:#afaf87;}.txt145{color:#afafaf;}.txt146{color:#afafd7;}.txt147{color:#afafff;}.txt148{color:#afd700;}.txt149{color:#afd75f;}.txt150{color:#afd787;}.txt151{color:#afd7af;}.txt152{color:#afd7d7;}.txt153{color:#afd7ff;}.txt154{color:#afff00;}.txt155{color:#afff5f;}.txt156{color:#afff87;}.txt157{color:#afffaf;}.txt158{color:#afffd7;}.txt159{color:#afffff;}.txt160{color:#d70000;}.txt161{color:#d7005f;}.txt162{color:#d70087;}.txt163{color:#d700af;}.txt164{color:#d700d7;}.txt165{color:#d700ff;}.txt166{color:#d75f00;}.txt167{color:#d75f5f;}.txt168{color:#d75f87;}.txt169{color:#d75faf;}.txt170{color:#d75fd7;}.txt171{color:#d75fff;}.txt172{color:#d78700;}.txt173{color:#d7875f;}.txt174{color:#d78787;}.txt175{color:#d787af;}.txt176{color:#d787d7;}.txt177{color:#d787ff;}.txt178{color:#d7af00;}.txt179{color:#d7af5f;}.txt180{color:#d7af87;}.txt181{color:#d7afaf;}.txt182{color:#d7afd7;}.txt183{color:#d7afff;}.txt184{color:#d7d700;}.txt185{color:#d7d75f;}.txt186{color:#d7d787;}.txt187{color:#d7d7af;}.txt188{color:#d7d7d7;}.txt189{color:#d7d7ff;}.txt190{color:#d7ff00;}.txt191{color:#d7ff5f;}.txt192{color:#d7ff87;}.txt193{color:#d7ffaf;}.txt194{color:#d7ffd7;}.txt195{color:#d7ffff;}.txt196{color:#ff0000;}.txt197{color:#ff005f;}.txt198{color:#ff0087;}.txt199{color:#ff00af;}.txt200{color:#ff00d7;}.txt201{color:#ff00ff;}.txt202{color:#ff5f00;}.txt203{color:#ff5f5f;}.txt204{color:#ff5f87;}.txt205{color:#ff5faf;}.txt206{color:#ff5fd7;}.txt207{color:#ff5fff;}.txt208{color:#ff8700;}.txt209{color:#ff875f;}.txt210{color:#ff8787;}.txt211{color:#ff87af;}.txt212{color:#ff87d7;}.txt213{color:#ff87ff;}.txt214{color:#ffaf00;}.txt215{color:#ffaf5f;}.txt216{color:#ffaf87;}.txt217{color:#ffafaf;}.txt218{color:#ffafd7;}.txt219{color:#ffafff;}.txt220{color:#ffd700;}.txt221{color:#ffd75f;}.txt222{color:#ffd787;}.txt223{color:#ffd7af;}.txt224{color:#ffd7d7;}.txt225{color:#ffd7ff;}.txt226{color:#ffff00;}.txt227{color:#ffff5f;}.txt228{color:#ffff87;}.txt229{color:#ffffaf;}.txt230{color:#ffffd7;}.txt231{color:#ffffff;}.txt232{color:#080808;}.txt233{color:#121212;}.txt234{color:#1c1c1c;}.txt235{color:#262626;}.txt236{color:#303030;}.txt237{color:#3a3a3a;}.txt238{color:#444444;}.txt239{color:#4e4e4e;}.txt240{color:#585858;}.txt241{color:#626262;}.txt242{color:#6c6c6c;}.txt243{color:#767676;}.txt244{color:#808080;}.txt245{color:#8a8a8a;}.txt246{color:#949494;}.txt247{color:#9e9e9e;}.txt248{color:#a8a8a8;}.txt249{color:#b2b2b2;}.txt250{color:#bcbcbc;}.txt251{color:#c6c6c6;}.txt252{color:#d0d0d0;}.txt253{color:#dadada;}.txt254{color:#e4e4e4;}.txt255{color:#eeeeee;}.center{margin:0 auto;width:max-content;}span{font-family:Andale Mono,monospace;font-size:1em;-webkit-font-smoothing:antialiased;}</style></head><body><div class="center bk0"><span>';
}
function html_2() {
	return '</span></div></body></html>';
}

?>